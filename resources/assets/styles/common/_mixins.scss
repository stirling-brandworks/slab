/// Triangle helper mixin
/// @link https://css-tricks.com/snippets/sass/css-triangle-mixin/
/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
/// @param {Color} $color [currentcolor] - Triangle color
/// @param {Length} $size [1em] - Triangle size
@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  @if not index(top right bottom left, $direction) {
    @error "Direction must be either `top`, `right`, `bottom` or `left`.";
  }

  width: 0;
  height: 0;
  content: "";
  z-index: 2;
  border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left: $perpendicular-borders;
    border-right: $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top: $perpendicular-borders;
  }
}

/// Set the hover focus and active state at once
/// @link https://github.com/twbs/bootstrap/blob/v4.5.3/scss/mixins/_hover.scss
@mixin hover-focus-active() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

/// Set the color of a link, including all the hover, focus and active states
/// @param {Color} $color - The link color default
/// @param {Color} $visited [$color] - The link color when visited
/// @param {Color} $hover [$color] - The link color when hovered
/// @param {Color} $active [$color] - The link color when active/focused
@mixin link-color($color, $visited: $color, $hover: $color, $active: $color) {
  & {
    color: $link;

    &:visited {
      color: $visited;
    }

    &:hover {
      color: $hover;
    }

    &:active,
    &:focus {
      color: $active;
    }
  }
}
